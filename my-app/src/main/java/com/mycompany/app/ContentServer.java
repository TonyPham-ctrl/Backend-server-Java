package com.mycompany.app;

import java.io.*;
import java.net.*;
import java.nio.file.*;
import org.json.simple.parser.ParseException;
import org.json.simple.*;
import org.json.simple.parser.JSONParser;

public class ContentServer {
    private static int PORT = 4567;
    private static String serverName = "localhost";

    @SuppressWarnings("unchecked")
    public static void fileReader(String line, JSONObject jsonFile){
        int colonIndex = line.indexOf(":");
        if (colonIndex != -1){
            String key = line.substring(0, colonIndex).trim();
            String value = line.substring(colonIndex+1, line.length()).trim();

            System.out.println( key + " | " + value);
            jsonFile.put(key,value);
        } else {
            System.out.println("Invalid entry, no colon");
        }
    }

    public static void main(String[] args) {
        if (args.length < 1) {
            System.out.println("Too few arguments, <serverName:host> <stationID (optional)>");
            return;
        } else if (args.length > 2) {
            System.out.println("Too many arguments, <serverName:host> <stationID (optional)>");
            return;
        }
        String[] serverInfo = args[0].split(":");
        PORT = Integer.parseInt(serverInfo[1]);
        serverName = serverInfo[0];
        String filePath = args[1];

        JSONObject jsonFile = new JSONObject();

        // reading from file path and populating JSON object
        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = reader.readLine()) != null) {
                // splitting lines in input file into key:value format
                fileReader(line, jsonFile);

            }
        } catch (IOException error) {
            System.out.println("Error reading the file: " + error.getMessage());
            return;
        }
        try (Socket socket = new Socket(serverName, PORT);
                OutputStream outputStream = socket.getOutputStream();
                PrintWriter writer = new PrintWriter(outputStream, true);
                BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream()))) {

            // preparing http put request to aggregation server as per assignment format
            String jsonData = jsonFile.toJSONString();
            writer.println("PUT /weatherData HTTP/1.1");
            writer.println("User-Agent: ATOMClient/1/0");
            writer.println("Content-Type: application/json");
            writer.println("Content-Length: " + jsonData.length());
            writer.println();
            writer.println(jsonData); // Send the JSON body
            writer.flush();

            // read server response
            String responseLine;
            while ((responseLine = reader.readLine()) != null) {
                System.out.println("Server response: " + responseLine);
            }
        } catch (IOException e) {
            System.out.println("Cannot connect to server or send data: " + e.getMessage());
        }

        // writing json data into out.json file to manually inspect, purely for testing
        // and development purposes, ONLY this code bellow is generated by ChatGPT
        String outputJsonFilePath = "output.json";
        try (FileWriter file = new FileWriter(outputJsonFilePath)) {
            file.write(jsonFile.toJSONString());
            System.out.println("JSON successfully exported to " + outputJsonFilePath);
        } catch (IOException e) {
            System.out.println("Error writing JSON to file: " + e.getMessage());
        }
    }
}
